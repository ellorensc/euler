<?php

namespace euler\problem2;

use Exception;

/**
 * Euler Project - Problem 2
 *
 * Even Fibonacci numbers. Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, â€¦
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 * @author Eduardo Llorens <ellorensc@gmail.com>
 * @version 1.0
 */
class EvenFibonacciNumbers
{
    /** @var  int */
    private $limit;

    /**
     * EvenFibonacciNumbers constructor.
     * @param $limit
     */
    public function __construct($limit)
    {
        $this->limit = $limit;
    }

    public function calculate()
    {
        if (!isset($this->limit) || $this->limit <= 0) {
            throw new Exception();
        }

        $result = 0;

        list($current, $next, $increment, $sequence) = [0, 1, 1, []];

        do
        {
            $increment++;
            $sequence[] = $current;
            $add = $current + $next;
            $current = $next;
            $next = $add;

            if (($add % 2) == 0) {
                $result += $add;
            }
        } while ($add < $this->limit);

        return $result;
    }
}
