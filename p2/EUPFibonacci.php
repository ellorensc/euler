<?php
/**
 * Euler Project - Problem 2
 *
 * Even Fibonacci numbers. Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, â€¦
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 * @author Eduardo Llorens <ellorensc@gmail.com>
 * @version 1.0
 * @copyright Copyright (c) 2013 Eduardo Llorens
 */

class EUPFibonacci
{
    const BASELINE = 4000000;

    /**
     * Returns the even Fibonacci numbers that does not exceeds some value (BASELINE)
     * @return int
     */
    public function evenFibonacciNumbers()
    {
        $result = 0;

        list($cur, $nxt, $inc, $seq) = array(0, 1, 1, array());

        do
        {
            $inc++;
            $seq[] = $cur;
            $add = $cur + $nxt;
            $cur = $nxt;
            $nxt = $add;

            if (($add % 2) == 0) {
                $result += $add;
            }
        } while ($add > self::BASELINE);

        return $result;
    }

    /**
     * Test case
     */
    public function run()
    {
        echo 'Even Fibonacci numbers: '.$this->evenFibonacciNumbers();
    }
}